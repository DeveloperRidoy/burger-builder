{"version":3,"sources":["containers/Checkout/Checkout.module.scss","containers/Checkout/ConactData/ContactData.module.css","components/Layout/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ConactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["module","exports","CheckoutSummary","props","className","classes","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","name","email","uid","address","postcode","street","message","phone","deliveryMethod","loadng","error","formRef","React","createRef","inputHandler","e","input","target","getAttribute","setState","value","prevState","console","log","vlaue","Number","orderHandler","preventDefault","loading","order","price","totalPrice","customer","orderedTime","Date","db","collection","doc","set","then","res","history","push","catch","err","authState","this","context","current","scrollIntoView","id","form","ref","onSubmit","type","placeholder","onChange","required","maxLength","min","hidden","rows","Component","contextType","Context","Checkout","salad","meat","cheese","bacon","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","URLSearchParams","location","search","forEach","param","Object","values","every","item","path","match","exact","render"],"mappings":"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","file":"static/js/3.9151d58a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkout\":\"Checkout_Checkout__1XxGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2rfCp\",\"animate\":\"ContactData_animate__3Z2nr\"};","import React from 'react'\r\nimport classes from './CheckoutSummary.module.scss'\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return (\r\n      <div className={classes.CheckoutSummary}>\r\n        <div className=\"p-4 text-center\">\r\n          <h1>We hope it tastes well!</h1>\r\n          <div className=\"mx-auto w-100\">\r\n            <Burger ingredients={props.ingredients} />\r\n          </div>\r\n          <div className=\"\">\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n              CANCEL\r\n            </Button> \r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n              CONTINUE\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CheckoutSummary;","import React, { Component } from 'react'\r\nimport classes from './ContactData.module.css'\r\nimport Spinner from '../../../components/Layout/UI/Spinner/Spinner2/Spinner2';\r\nimport { db } from '../../../components/Firebase/Firebase'\r\nimport { FaPhone, FaStreetView, FaShippingFast, FaFileArchive, FaEnvelopeOpenText } from 'react-icons/fa'\r\nimport { Context } from '../../../hoc/WithAuthentication/WithAuthentication';\r\n\r\nclass ContactData extends Component {\r\n\r\n    static contextType = Context\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        uid: null,\r\n        address: {\r\n            postcode: '',\r\n            street: ''\r\n        },\r\n        message: '',\r\n        phone: '',\r\n        deliveryMethod: '',\r\n        loadng: false,\r\n        error: false\r\n    }\r\n\r\n    formRef = React.createRef()\r\n    \r\n    componentDidMount () {\r\n        const [authState, , ,] = this.context\r\n        this.formRef.current.scrollIntoView()\r\n        this.state.uid !== authState.uid && this.setState({uid: authState.uid})\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        const input = e.target.getAttribute('name');\r\n\r\n        // if (input === 'phone' && e.target.value.toString().length <=5) {\r\n        //     console.log(e.target.value)\r\n        // }\r\n        input === 'name' && this.setState({ name: e.target.value })\r\n        input === 'email' && this.setState({email : e.target.value})\r\n        // input === 'phone' && this.setState({phone : e.target.value})\r\n        input === 'delivery method' && this.setState({deliveryMethod : e.target.value})\r\n\r\n        input === 'street' && this.setState(prevState => ({\r\n            address: {...prevState.address, street: e.target.value}\r\n        }))\r\n        input === 'postal' && this.setState(prevState => ({\r\n            address: {...prevState.address, postcode: e.target.value}\r\n        }))\r\n        input === \"message\" && this.setState({ message: e.target.value });\r\n        \r\n\r\n        if (input === 'phone' ) {\r\n            const value = e.target.value;\r\n            console.log(typeof vlaue );\r\n            this.setState({phone: Number(value)})\r\n        }\r\n    }\r\n\r\n    orderHandler = (e) => {\r\n      e.preventDefault();\r\n\r\n      this.setState({ loading: true });\r\n\r\n    const order = {\r\n        uid: this.state.uid,\r\n        ingredients: this.props.ingredients,\r\n        price: this.props.totalPrice,\r\n        customer: {\r\n            name: this.state.name,\r\n            address: {\r\n            street: this.state.address.street,\r\n            postcode: this.state.address.postcode,\r\n          },\r\n          phone: Number(this.state.phone),\r\n          email: this.state.email,\r\n        },\r\n        deliveryMethod: this.state.deliveryMethod,\r\n        message: this.state.message,\r\n        orderedTime: new Date()\r\n      };\r\n\r\n      db.collection('orders')\r\n        .doc()\r\n        .set(order)\r\n          .then(res => {\r\n            this.setState({ loading: false });\r\n            this.props.history.push('/')\r\n        })\r\n          .catch(err => {\r\n              console.log(err);\r\n              this.setState({ loading: false, error: true })\r\n          });\r\n        \r\n    }\r\n    \r\n\r\n\r\n    render () {\r\n        console.log(this.state.id)\r\n        let form =  (\r\n            <div className={classes.ContactData} ref={this.formRef}>\r\n                <form className=\"col-11 col-md-6 mx-auto p-4 bg-dark shadow-lg rounded-lg mb-5\" onSubmit={this.orderHandler} >\r\n                    <p className=\"text-light text-center h4 mb-3\">Enter your contact data</p>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-md-6 form-group\">\r\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Your Name\" onChange={this.inputHandler} required maxLength={Number(5)}/>\r\n                        </div>\r\n                        <div className=\"col-md-6 form-group\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\"><FaEnvelopeOpenText/></div>\r\n                                </div>\r\n                                <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Your Email\" onChange={this.inputHandler} required/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text\"><FaPhone/></div>\r\n                            </div>\r\n                            <input type=\"number\" name=\"phone\" className=\"form-control\" placeholder=\"Phone Number\" onChange={this.inputHandler} min=\"0\" required/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text\"><FaShippingFast/></div>\r\n                            </div>\r\n                            <select name=\"delivery method\" className=\"form-control\" onChange={this.inputHandler} value={this.state.deliveryMethod} required>\r\n                            <option hidden value=\"\">Delivery Method</option>\r\n                            <option value=\"Normal\">Normal</option>\r\n                            <option value=\"Fast\">Fast</option>\r\n                            <option value=\"Fastest\">Fastest</option>\r\n                        </select>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text\"><FaStreetView/></div>\r\n                            </div>\r\n                            <input type=\"text\" name=\"street\" className=\"form-control\" placeholder=\"Street Name\" onChange={this.inputHandler} required/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <div className=\"input-group-text\"><FaFileArchive/></div>\r\n                            </div>\r\n                            <input type=\"number\" name=\"postal\" className=\"form-control\" placeholder=\"Postal Code\" onChange={this.inputHandler} min=\"0\" required/>\r\n                        </div> \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea name=\"message\" rows=\"3\" placeholder=\"Your message here...\" className=\"form-control\"  onChange={this.inputHandler} required></textarea>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-success\" value=\"Submit\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n             \r\n        this.state.loading && (form = <Spinner/>)\r\n\r\n        return (form)\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React, { Component } from 'react'\r\nimport CheckoutSummary from '../../components/Layout/Order/CheckoutSummary/CheckoutSummary';\r\nimport classes from './Checkout.module.scss'\r\nimport { Route } from 'react-router-dom';\r\nimport ContactData from '../../containers/Checkout/ConactData/ContactData';\r\nimport { Context } from '../../hoc/WithAuthentication/WithAuthentication';\r\n\r\n\r\n\r\nclass Checkout extends Component {\r\n\r\n    static contextType = Context\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            meat: 0,\r\n            cheese: 0,\r\n            bacon: 0\r\n        },\r\n        totalPrice: 0\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n\r\n        let ingredients = {};\r\n        let totalPrice = 0;\r\n        const query = new URLSearchParams(this.props.location.search);\r\n\r\n        query.forEach((value, param) => {\r\n            if (param === \"price\") {\r\n            totalPrice = Number(value);\r\n            } else {\r\n            ingredients[param] = Number(value);\r\n            }\r\n        });\r\n\r\n        this.setState({ ingredients: ingredients, totalPrice: totalPrice });    \r\n        \r\n        //redirect to burgerbuilder if burger has no ingredients\r\n        Object.values(ingredients).every(item => item === 0) && this.props.history.replace('/')\r\n       \r\n    }\r\n\r\n    checkoutCancelledHandler = () => this.props.history.goBack();\r\n\r\n    checkoutContinuedHandler = () => this.props.history.replace(\"/checkout/contact-data\");\r\n\r\n    render () {\r\n        return (\r\n          <div className={classes.Checkout}>\r\n            <CheckoutSummary\r\n                ingredients={this.state.ingredients}\r\n                checkoutCancelled={this.checkoutCancelledHandler}\r\n                checkoutContinued={this.checkoutContinuedHandler}    \r\n            />\r\n            <Route path={`${this.props.match.path}/contact-data`} exact render={(props) => <ContactData ingredients={this.state.ingredients} totalPrice={this.state.totalPrice} {...props}/>}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout"],"sourceRoot":""}